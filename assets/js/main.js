console.log('üöÄ main.js –Ω–∞—á–∏–Ω–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É...');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let publicationsData = [];
let projectsData = [];
let publicationsChart = null;

console.log('üìã –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üéØ DOMContentLoaded —Å–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ');
    
    try {

        
        console.log('üåç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤...');
        initializeLanguageSystem();
        
        console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã...');
        initializeTheme();
        
        console.log('üß≠ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
        initializeNavigation();
        
        console.log('üëÅÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è scroll spy...');
        initializeScrollSpy();
        
        console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
        loadData();
        
        console.log('üìß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...');
        initializeContactForm();
        
        console.log('‚ú® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π...');
        initializeAnimations();
        
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–π...');
        // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö, –∑–∞—Ç–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        setTimeout(initializePublicationFilters, 1000);
        
        console.log('‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    }
});

console.log('üìù DOMContentLoaded —Å–ª—É—à–∞—Ç–µ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');



// === –£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–ï–ú–û–ô ===
function initializeTheme() {
    const themeToggle = document.getElementById('theme-toggle');
    const savedTheme = localStorage.getItem('theme');
    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–µ–º—ã
    if (savedTheme === 'dark' || (!savedTheme && systemPrefersDark)) {
        document.documentElement.classList.add('dark');
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    themeToggle?.addEventListener('click', function() {
        const isDark = document.documentElement.classList.toggle('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º—ã
        if (publicationsChart) {
            updateChartTheme();
        }
        // –ú–æ–±–∏–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ CSS
    });
}

// === –ù–ê–í–ò–ì–ê–¶–ò–Ø ===
function initializeNavigation() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenuClose = document.getElementById('mobile-menu-close');
    const mobileMenu = document.getElementById('mobile-menu');
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    mobileMenuButton?.addEventListener('click', function() {
        mobileMenu.classList.remove('hidden');
        document.body.style.overflow = 'hidden'; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    function closeMobileMenu() {
        mobileMenu?.classList.add('hidden');
        document.body.style.overflow = ''; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    }
    
    mobileMenuClose?.addEventListener('click', closeMobileMenu);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
    mobileMenu?.addEventListener('click', function(e) {
        if (e.target === mobileMenu) {
            closeMobileMenu();
        }
    });
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –ø–æ —è–∫–æ—Ä—è–º
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                const headerHeight = document.querySelector('nav').offsetHeight;
                const targetPosition = target.offsetTop - headerHeight;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
                closeMobileMenu();
            }
        });
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ ESC
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeMobileMenu();
        }
    });
}

// === SCROLL SPY ===
function initializeScrollSpy() {
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('.nav-link');
    
    function updateActiveNav() {
        const scrollY = window.pageYOffset;
        const headerHeight = document.querySelector('nav').offsetHeight;
        
        sections.forEach(section => {
            const sectionTop = section.offsetTop - headerHeight - 50;
            const sectionBottom = sectionTop + section.offsetHeight;
            const sectionId = section.getAttribute('id');
            
            if (scrollY >= sectionTop && scrollY < sectionBottom) {
                navLinks.forEach(link => {
                    link.classList.remove('text-primary-600', 'dark:text-primary-400');
                    if (link.getAttribute('href') === `#${sectionId}`) {
                        link.classList.add('text-primary-600', 'dark:text-primary-400');
                    }
                });
            }
        });
    }
    
    window.addEventListener('scroll', updateActiveNav);
    updateActiveNav(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
}

// === –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ===
async function loadData() {
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        showLoadingState();
        
        const response = await fetch('data/publications.json');
        const data = await response.json();
        
        publicationsData = data.publications;
        projectsData = data.projects;
        
        // –†–µ–Ω–¥–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        await renderPublicationsTable();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–∞–±–ª–∏—Ü—ã
        setTimeout(initializePublicationFilters, 50);
        

        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–ª—å–∫–æ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ (—ç–∫—Ä–∞–Ω—ã –±–æ–ª—å—à–µ 768px)
        if (window.innerWidth > 768) {
            console.log('üñ•Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
            setTimeout(renderPublicationsChart, 100);
        } else {
            console.log('üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫—Ä—ã—Ç–∞');
        }
        
        setTimeout(renderProjects, 200);
        
        hideLoadingState();
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        showErrorMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π');
        hideLoadingState();
    }
}

function showLoadingState() {
    const containers = ['publications-table', 'publications-mobile', 'projects-container'];
    containers.forEach(id => {
        const element = document.getElementById(id);
        if (element) {
            element.innerHTML = `
                <div class="text-center py-8">
                    <i class="fas fa-spinner fa-spin text-3xl text-primary-500 mb-4"></i>
                    <div class="text-gray-600 dark:text-gray-300">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                </div>
            `;
        }
    });
}

function hideLoadingState() {
    // –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö
}

// –ü–†–ò–ú–ï–ß–ê–ù–ò–ï: –ú–æ–±–∏–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω–∞ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

// === –ü–£–ë–õ–ò–ö–ê–¶–ò–ò ===
function renderPublicationsTable(filter = 'all') {
    console.log('üìö === –†–ï–ù–î–ï–†–ò–ù–ì –ü–£–ë–õ–ò–ö–ê–¶–ò–ô ===');
    console.log('üîç –§–∏–ª—å—Ç—Ä:', filter);
    console.log('üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π:', publicationsData ? publicationsData.length : '–¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    
    const tableBody = document.getElementById('publications-table');
    const mobileContainer = document.getElementById('publications-mobile');
    
    console.log('üì¶ Desktop –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (publications-table):', !!tableBody);
    console.log('üì± Mobile –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (publications-mobile):', !!mobileContainer);
    
    if (!publicationsData || publicationsData.length === 0) {
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –î–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –æ–±–æ–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
        const errorMessage = `
            <div class="text-center py-8">
                <i class="fas fa-exclamation-triangle text-3xl text-orange-500 mb-4"></i>
                <div class="text-gray-600 dark:text-gray-300">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</div>
                <button onclick="loadData()" class="mt-2 bg-primary-500 text-white px-4 py-2 rounded text-sm hover:bg-primary-600 transition-colors">
                    –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                </button>
            </div>
        `;
        
        if (tableBody) {
            tableBody.innerHTML = `<tr><td colspan="5">${errorMessage}</td></tr>`;
        }
        if (mobileContainer) {
            mobileContainer.innerHTML = errorMessage;
        }
        return;
    }
    
    const filteredPublications = filter === 'all' 
        ? publicationsData 
        : publicationsData.filter(pub => pub.category === filter);
    
    console.log('‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', filteredPublications.length);
    
    // Desktop Table
    if (tableBody) {
        tableBody.innerHTML = filteredPublications.map(pub => `
            <tr class="border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-dark-card transition-colors">
                <td class="px-6 py-4">
                    <div class="font-semibold text-gray-900 dark:text-white">${pub.title}</div>
                    <div class="text-sm text-gray-600 dark:text-gray-300 mt-1">${pub.authors}</div>
                    <div class="text-xs text-gray-500 dark:text-gray-400 mt-1">${pub.abstract.substring(0, 100)}...</div>
                </td>
                <td class="px-6 py-4 text-sm text-gray-600 dark:text-gray-300">${pub.year}</td>
                <td class="px-6 py-4">
                    <span class="category-badge category-${pub.category}">${getCategoryName(pub.category)}</span>
                </td>
                <td class="px-6 py-4 text-sm text-gray-600 dark:text-gray-300">${pub.journal}</td>
                <td class="px-6 py-4">
                    <div class="flex space-x-2">
                        <button onclick="viewPublication(${pub.id})" 
                                class="text-primary-500 hover:text-primary-600 transition-colors">
                            <i class="fas fa-eye"></i>
                        </button>
                        <a href="#" onclick="copyDOI('${pub.doi}')" 
                           class="text-green-500 hover:text-green-600 transition-colors">
                            <i class="fas fa-copy"></i>
                        </a>
                    </div>
                </td>
            </tr>
        `).join('');
    }
    
    // Mobile Cards - –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è
    if (mobileContainer) {
        mobileContainer.innerHTML = filteredPublications.map(pub => `
            <div class="bg-white dark:bg-dark-card rounded-lg shadow-md p-4 mb-4 border-l-4 border-primary-500 hover:shadow-lg transition-shadow">
                <div class="flex justify-between items-start mb-3">
                    <div class="flex-1">
                        <h4 class="font-bold text-gray-900 dark:text-white text-sm leading-tight mb-2">${pub.title}</h4>
                        <div class="flex flex-wrap items-center gap-2 mb-2">
                            <span class="category-badge category-${pub.category} text-xs">${getCategoryName(pub.category)}</span>
                            <span class="text-xs text-gray-500 dark:text-gray-400">‚Ä¢</span>
                            <span class="text-xs text-gray-600 dark:text-gray-300 font-medium">${pub.year}</span>
                        </div>
                    </div>
                </div>
                
                <div class="text-xs text-gray-600 dark:text-gray-300 mb-2">
                    <span class="font-medium">–ê–≤—Ç–æ—Ä—ã:</span> ${pub.authors}
                </div>
                
                <div class="text-xs text-gray-500 dark:text-gray-400 mb-3" style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">
                    ${pub.abstract.substring(0, 120)}...
                </div>
                
                <div class="text-xs text-gray-500 dark:text-gray-400 mb-3" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                    <span class="font-medium">–ñ—É—Ä–Ω–∞–ª:</span> ${pub.journal}
                </div>
                
                <div class="flex justify-between items-center">
                    <button onclick="viewPublication(${pub.id})" 
                            class="touch-button bg-primary-500 text-white px-3 py-2 rounded-md text-xs font-medium hover:bg-primary-600 transition-colors flex items-center">
                        <i class="fas fa-eye mr-1"></i>–ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                    <button onclick="copyDOI('${pub.doi}')" 
                            class="touch-button text-gray-500 dark:text-gray-400 hover:text-primary-500 transition-colors p-2 rounded-md">
                        <i class="fas fa-copy text-sm"></i>
                    </button>
                </div>
            </div>
        `).join('');
        
        console.log('üì± ‚úÖ –ú–æ–±–∏–ª—å–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–∑–¥–∞–Ω—ã:', filteredPublications.length);
    } else {
        console.warn('‚ö†Ô∏è –ú–æ–±–∏–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    console.log('üìö ‚úÖ –†–ï–ù–î–ï–†–ò–ù–ì –ü–£–ë–õ–ò–ö–ê–¶–ò–ô –ó–ê–í–ï–†–®–Å–ù ===');
}

function getCategoryName(category) {
    const categories = {
        'security': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        'devops': 'DevOps',
        'ml': 'Machine Learning',
        'humanities': '–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –Ω–∞—É–∫–∏', 
        'algorithms': '–ê–ª–≥–æ—Ä–∏—Ç–º—ã'
    };
    return categories[category] || category;
}

function renderPublicationsChart() {
    const ctx = document.getElementById('publicationsChart')?.getContext('2d');
    if (!ctx) return;
    
    // –ù–µ —Å–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    if (window.innerWidth <= 768) {
        return;
    }
    
    try {
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const allCategories = [...new Set(publicationsData.map(pub => pub.category))];
        
        // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –≥–æ–¥–∞–º –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        const yearData = {};
        publicationsData.forEach(pub => {
            if (!yearData[pub.year]) {
                yearData[pub.year] = {};
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω—É–ª—è–º–∏
                allCategories.forEach(cat => {
                    yearData[pub.year][cat] = 0;
                });
            }
            yearData[pub.year][pub.category]++;
        });
        
        const years = Object.keys(yearData).sort();
        
        // –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        const categoryColors = {
            'security': { bg: 'rgba(147, 51, 234, 0.8)', border: 'rgb(147, 51, 234)' }, // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
            'devops': { bg: 'rgba(59, 130, 246, 0.8)', border: 'rgb(59, 130, 246)' },
            'ml': { bg: 'rgba(34, 197, 94, 0.8)', border: 'rgb(34, 197, 94)' },
            'humanities': { bg: 'rgba(251, 146, 60, 0.8)', border: 'rgb(251, 146, 60)' } // –ü–µ—Ä–µ–Ω–µ—Å–ª–∏ –æ—Ä–∞–Ω–∂–µ–≤—ã–π —Å—é–¥–∞
        };
        
        // –°–æ–∑–¥–∞–µ–º dataset –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const datasets = allCategories.map(category => {
            const categoryData = years.map(year => yearData[year][category] || 0);
            const colors = categoryColors[category] || { 
                bg: 'rgba(128, 128, 128, 0.8)', 
                border: 'rgb(128, 128, 128)' 
            };
            
            return {
                label: getCategoryName(category),
                data: categoryData,
                backgroundColor: colors.bg,
                borderColor: colors.border,
                borderWidth: 1
            };
        });
        
        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –¥–ª—è —Ç–µ–º—ã
        const isDark = document.documentElement.classList.contains('dark');
        const textColor = isDark ? '#e5e7eb' : '#374151';
        const gridColor = isDark ? '#374151' : '#e5e7eb';
        
        // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≥—Ä–∞—Ñ–∏–∫ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (publicationsChart) {
            publicationsChart.destroy();
        }
        
        publicationsChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: years,
                datasets: datasets
            },
            options: {
                responsive: true,
                animation: {
                    duration: 800 // –£–º–µ–Ω—å—à–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                },
                plugins: {
                    legend: {
                        labels: {
                            color: textColor
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            color: textColor
                        },
                        grid: {
                            color: gridColor
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            color: textColor,
                            stepSize: 1
                        },
                        grid: {
                            color: gridColor
                        }
                    }
                }
            }
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞:', error);
        // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const canvas = document.getElementById('publicationsChart');
        if (canvas && canvas.parentElement) {
            canvas.parentElement.innerHTML = `
                <div class="text-center py-8 text-gray-500 dark:text-gray-400">
                    <i class="fas fa-chart-bar text-3xl mb-2"></i>
                    <div>–ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</div>
                </div>
            `;
        }
    }
}

function updateChartTheme() {
    if (!publicationsChart) return;
    
    const isDark = document.documentElement.classList.contains('dark');
    const textColor = isDark ? '#e5e7eb' : '#374151';
    const gridColor = isDark ? '#374151' : '#e5e7eb';
    
    publicationsChart.options.plugins.legend.labels.color = textColor;
    publicationsChart.options.scales.x.ticks.color = textColor;
    publicationsChart.options.scales.x.grid.color = gridColor;
    publicationsChart.options.scales.y.ticks.color = textColor;
    publicationsChart.options.scales.y.grid.color = gridColor;
    
    publicationsChart.update();
}

// === –§–ò–õ–¨–¢–†–´ –ü–£–ë–õ–ò–ö–ê–¶–ò–ô ===
function initializePublicationFilters() {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–π...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –∫–∞–∂–¥—É—é –∫–Ω–æ–ø–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ
    const filterButtons = document.querySelectorAll('.filter-btn');
    console.log('üîç –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤:', filterButtons.length);
    
    filterButtons.forEach((button, index) => {
        console.log(`üîò –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ ${index + 1}:`, button.getAttribute('data-filter'));
        
        // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        button.replaceWith(button.cloneNode(true));
        const newButton = document.querySelectorAll('.filter-btn')[index];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        newButton.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            console.log('üéØ –ö–õ–ò–ö! –ö–Ω–æ–ø–∫–∞:', this.getAttribute('data-filter'));
            
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.classList.remove('active', 'bg-primary-500', 'text-white');
                btn.classList.add('border', 'border-primary-500', 'text-primary-500');
            });
            
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é –∫–Ω–æ–ø–∫—É
            this.classList.add('active', 'bg-primary-500', 'text-white');
            this.classList.remove('border', 'border-primary-500', 'text-primary-500');
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä
            const filter = this.getAttribute('data-filter');
            console.log('üìä –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä:', filter);
            renderPublicationsTable(filter);
        });
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ touchstart –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        newButton.addEventListener('touchstart', function(e) {
            console.log('üëÜ TOUCH START –Ω–∞ –∫–Ω–æ–ø–∫–µ:', this.getAttribute('data-filter'));
            this.style.transform = 'scale(0.95)';
        });
        
        newButton.addEventListener('touchend', function(e) {
            console.log('üëÜ TOUCH END –Ω–∞ –∫–Ω–æ–ø–∫–µ:', this.getAttribute('data-filter'));
            this.style.transform = 'scale(1)';
        });
    });
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
document.addEventListener('click', function(e) {
    const filterBtn = e.target.closest('.filter-btn');
    if (filterBtn) {
        console.log('üÜò –ó–ê–ü–ê–°–ù–û–ô –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–ª –¥–ª—è:', filterBtn.getAttribute('data-filter'));
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏
window.testFilters = function() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤...');
    const buttons = document.querySelectorAll('.filter-btn');
    console.log('–ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫:', buttons.length);
    
    buttons.forEach((btn, i) => {
        console.log(`–ö–Ω–æ–ø–∫–∞ ${i + 1}:`, {
            element: btn,
            dataFilter: btn.getAttribute('data-filter'),
            classes: btn.className,
            hasClickListener: btn.onclick !== null
        });
    });
    
    console.log('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∫–æ–Ω—Å–æ–ª—å—é...');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
window.forceInitFilters = function() {
    console.log('üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤...');
    initializePublicationFilters();
};

// === –ü–†–û–ï–ö–¢–´ ===
function renderProjects() {
    const container = document.getElementById('projects-container');
    if (!container) return;
    
    container.innerHTML = projectsData.map(project => `
        <div class="bg-white dark:bg-dark-card rounded-xl shadow-lg overflow-hidden hover:shadow-2xl transition-all transform hover:scale-105">
            <div class="h-48 bg-gradient-to-r ${getProjectGradient(project.category)} relative overflow-hidden">
                <div class="absolute inset-0 bg-black/20"></div>
                <div class="absolute bottom-4 left-4 right-4">
                    <span class="category-badge category-${project.category}">${getCategoryName(project.category)}</span>
                </div>
            </div>
            
            <div class="p-6">
                <h3 class="text-xl font-bold mb-2 text-gray-900 dark:text-white">${project.title}</h3>
                <p class="text-gray-600 dark:text-gray-300 mb-4">${project.description}</p>
                
                <div class="flex flex-wrap gap-2 mb-4">
                    ${project.technologies.slice(0, 3).map(tech => 
                        `<span class="px-3 py-1 bg-gray-100 dark:bg-dark-bg text-sm rounded-full">${tech}</span>`
                    ).join('')}
                    ${project.technologies.length > 3 ? `<span class="px-3 py-1 bg-gray-100 dark:bg-dark-bg text-sm rounded-full">+${project.technologies.length - 3}</span>` : ''}
                </div>
                
                <div class="flex justify-between items-center">
                    <div class="flex space-x-3">
                        <a href="${project.github}" target="_blank" 
                           class="text-gray-600 dark:text-gray-300 hover:text-primary-500 transition-colors">
                            <i class="fab fa-github text-xl"></i>
                        </a>
                        <a href="${project.demo}" target="_blank" 
                           class="text-gray-600 dark:text-gray-300 hover:text-primary-500 transition-colors">
                            <i class="fas fa-external-link-alt text-xl"></i>
                        </a>
                    </div>
                    <button onclick="viewProject(${project.id})" 
                            class="bg-primary-500 text-white px-4 py-2 rounded-lg hover:bg-primary-600 transition-colors">
                        –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                </div>
            </div>
        </div>
    `).join('');
}

function getProjectGradient(category) {
    const gradients = {
        'security': 'from-purple-500 to-purple-700', // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
        'devops': 'from-blue-500 to-blue-700',
        'ml': 'from-green-500 to-green-700',
        'humanities': 'from-orange-400 to-orange-600' // –û—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –Ω–∞—É–∫
    };
    return gradients[category] || 'from-gray-500 to-gray-700';
}

// === –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê ===
function viewPublication(id) {
    const publication = publicationsData.find(p => p.id === id);
    if (!publication) return;
    
    showModal(`
        <div class="max-w-2xl mx-auto">
            <h3 class="text-2xl font-bold mb-4">${publication.title}</h3>
            <div class="mb-4">
                <span class="category-badge category-${publication.category}">${getCategoryName(publication.category)}</span>
                <span class="ml-2 text-gray-600 dark:text-gray-300">${publication.year}</span>
            </div>
            <p class="text-gray-700 dark:text-gray-300 mb-4"><strong>–ê–≤—Ç–æ—Ä—ã:</strong> ${publication.authors}</p>
            <p class="text-gray-700 dark:text-gray-300 mb-4"><strong>–ñ—É—Ä–Ω–∞–ª:</strong> ${publication.journal}</p>
            <p class="text-gray-700 dark:text-gray-300 mb-4"><strong>DOI:</strong> ${publication.doi}</p>
            <p class="text-gray-700 dark:text-gray-300 mb-4"><strong>–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è:</strong> ${publication.abstract}</p>
            <div class="mb-4">
                <strong class="text-gray-700 dark:text-gray-300">–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</strong>
                <div class="flex flex-wrap gap-2 mt-2">
                    ${publication.keywords.map(keyword => 
                        `<span class="px-3 py-1 bg-gray-100 dark:bg-dark-bg text-sm rounded-full">${keyword}</span>`
                    ).join('')}
                </div>
            </div>
        </div>
    `);
}

function viewProject(id) {
    const project = projectsData.find(p => p.id === id);
    if (!project) return;
    
    showModal(`
        <div class="max-w-3xl mx-auto">
            <h3 class="text-2xl font-bold mb-4">${project.title}</h3>
            <div class="mb-4">
                <span class="category-badge category-${project.category}">${getCategoryName(project.category)}</span>
            </div>
            <p class="text-gray-700 dark:text-gray-300 mb-6">${project.description}</p>
            
            <div class="grid md:grid-cols-2 gap-6 mb-6">
                <div>
                    <h4 class="font-bold mb-2">–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</h4>
                    <div class="flex flex-wrap gap-2">
                        ${project.technologies.map(tech => 
                            `<span class="px-3 py-1 bg-gray-100 dark:bg-dark-bg text-sm rounded-full">${tech}</span>`
                        ).join('')}
                    </div>
                </div>
                <div>
                    <h4 class="font-bold mb-2">–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h4>
                    <ul class="text-sm text-gray-700 dark:text-gray-300">
                        ${project.features.map(feature => `<li class="mb-1">‚Ä¢ ${feature}</li>`).join('')}
                    </ul>
                </div>
            </div>
            
            <div class="flex gap-4">
                <a href="${project.github}" target="_blank" 
                   class="bg-gray-800 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors">
                    <i class="fab fa-github mr-2"></i>GitHub
                </a>
                <a href="${project.demo}" target="_blank" 
                   class="bg-primary-500 text-white px-6 py-2 rounded-lg hover:bg-primary-600 transition-colors">
                    <i class="fas fa-external-link-alt mr-2"></i>–î–µ–º–æ
                </a>
            </div>
        </div>
    `);
}

function showModal(content) {
    const modal = document.createElement('div');
    modal.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm';
    modal.innerHTML = `
        <div class="bg-white dark:bg-dark-surface rounded-xl shadow-2xl max-h-screen overflow-y-auto m-4 p-6 relative max-w-4xl w-full">
            <button onclick="this.closest('.fixed').remove()" 
                    class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                <i class="fas fa-times text-xl"></i>
            </button>
            ${content}
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

// === –£–¢–ò–õ–ò–¢–´ ===
function copyDOI(doi) {
    navigator.clipboard.writeText(doi).then(() => {
        showNotification('DOI —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
    }).catch(() => {
        showNotification('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è DOI', 'error');
    });
}

function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all transform translate-x-full`;
    
    const colors = {
        'success': 'bg-green-500 text-white',
        'error': 'bg-red-500 text-white',
        'info': 'bg-blue-500 text-white'
    };
    
    notification.className += ` ${colors[type]}`;
    notification.innerHTML = `
        <div class="flex items-center">
            <span>${message}</span>
            <button onclick="this.closest('.fixed').remove()" class="ml-4 text-white hover:text-gray-200">
                <i class="fas fa-times"></i>
            </button>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
        notification.classList.remove('translate-x-full');
    }, 100);
    
    // –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ
    setTimeout(() => {
        notification.classList.add('translate-x-full');
        setTimeout(() => notification.remove(), 300);
    }, 3000);
}

function showErrorMessage(message) {
    const container = document.getElementById('publications-table');
    if (container) {
        container.innerHTML = `
            <tr>
                <td colspan="5" class="px-6 py-8 text-center">
                    <div class="text-purple-500 mb-2">
                        <i class="fas fa-exclamation-triangle text-2xl"></i>
                    </div>
                    <div class="text-gray-600 dark:text-gray-300">${message}</div>
                </td>
            </tr>
        `;
    }
}

// === –§–û–†–ú–ê –û–ë–†–ê–¢–ù–û–ô –°–í–Ø–ó–ò ===
function initializeContactForm() {
    console.log('üìß initializeContactForm() –≤—ã–∑–≤–∞–Ω–∞');
    
    const form = document.getElementById('contact-form');
    if (!form) {
        console.error('‚ùå –§–æ—Ä–º–∞ contact-form –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        return;
    }
    
    console.log('‚úÖ –§–æ—Ä–º–∞ –Ω–∞–π–¥–µ–Ω–∞:', form);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmailJS —Å –ø—É–±–ª–∏—á–Ω—ã–º –∫–ª—é—á–æ–º
    const emailjsConfig = {
        serviceId: 'service_4obvv96',
        templateId: 'template_da7l4hr', // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π Template ID –∏–∑ EmailJS
        publicKey: 'IsYJexeyV8lA7K7B6'
    };
    
    // –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
    console.log('üîß –°–æ–∑–¥–∞–µ–º testEmailJS —Ñ—É–Ω–∫—Ü–∏—é...');
    window.testEmailJS = function() {
        console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ EmailJS...');
        console.log('üîç EmailJS –¥–æ—Å—Ç—É–ø–µ–Ω?', typeof window.emailjs);
        console.log('‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:', emailjsConfig);
        
        if (!window.emailjs) {
            console.error('‚ùå EmailJS –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!');
            return Promise.reject('EmailJS –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
        }
        
        const testParams = {
            from_name: '–¢–µ—Å—Ç',
            from_email: 'test@example.com',
            message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            name: '–¢–µ—Å—Ç',
            email: 'test@example.com',
            user_name: '–¢–µ—Å—Ç',
            user_email: 'test@example.com',
            user_message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            subject: '–¢–µ—Å—Ç —Å —Å–∞–π—Ç–∞',
            timestamp: new Date().toLocaleString('ru-RU')
        };
        
        console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ—Å—Ç–∞:', testParams);
        
        return window.emailjs.send(
            emailjsConfig.serviceId,
            emailjsConfig.templateId,
            testParams,
            {
                publicKey: emailjsConfig.publicKey
            }
        ).then(result => {
            console.log('‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω:', result);
            return result;
        }).catch(error => {
            console.error('‚ùå –¢–µ—Å—Ç SDK –ø—Ä–æ–≤–∞–ª–µ–Ω:', error);
            console.log('üîÑ –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π API...');
            
            // Fallback –Ω–∞ –ø—Ä—è–º–æ–π API
            return fetch('https://api.emailjs.com/api/v1.0/email/send', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    service_id: emailjsConfig.serviceId,
                    template_id: emailjsConfig.templateId,
                    user_id: emailjsConfig.publicKey,
                    template_params: testParams
                })
            }).then(response => {
                console.log('üì° API —Ç–µ—Å—Ç –æ—Ç–≤–µ—Ç:', response.status);
                if (response.ok) {
                    return response.text().then(text => {
                        console.log('‚úÖ API —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω:', text);
                        return { status: response.status, text: text };
                    });
                } else {
                    return response.text().then(text => {
                        console.error('‚ùå API —Ç–µ—Å—Ç –æ—à–∏–±–∫–∞:', text);
                        throw new Error(`${response.status}: ${text}`);
                    });
                }
            });
        });
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å EmailJS (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ –Ω—É–∂–Ω–∞ –≤ v4)
    if (window.emailjs) {
        console.log('‚úÖ EmailJS –¥–æ—Å—Ç—É–ø–µ–Ω, –≤–µ—Ä—Å–∏—è:', window.emailjs.version || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞');
        console.log('üîß Public Key:', emailjsConfig.publicKey);
        console.log('üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏: testEmailJS()');
    } else {
        console.warn('‚ö†Ô∏è EmailJS –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ CDN');
        console.log('üîÑ –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å EmailJS –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º...');
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å EmailJS –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
        const script = document.createElement('script');
        script.src = 'https://cdn.emailjs.com/dist/email.min.js';
        script.onload = function() {
            console.log('‚úÖ EmailJS –∑–∞–≥—Ä—É–∂–µ–Ω –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º');
            if (window.emailjs) {
                console.log('‚úÖ EmailJS –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é (v4)');
            }
        };
        script.onerror = function() {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å EmailJS –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º');
        };
        document.head.appendChild(script);
    }
    
    console.log('üß™ testEmailJS() —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    
    console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ä–º—ã...');
    
    form.addEventListener('submit', async function(e) {
        console.log('üö® –§–û–†–ú–ê –û–¢–ü–†–ê–í–õ–ï–ù–ê! –°–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ');
        e.preventDefault();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const submitBtn = form.querySelector('button[type="submit"]');
        const originalText = submitBtn.innerHTML;
        console.log('üîò –ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:', submitBtn);
        
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>–û—Ç–ø—Ä–∞–≤–∫–∞...';
        submitBtn.disabled = true;
        console.log('‚è≥ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            const formData = new FormData(form);
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–¢ –ñ–ï —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ –∏ –≤ —É—Å–ø–µ—à–Ω–æ–º —Ç–µ—Å—Ç–µ
            const templateParams = {
                from_name: formData.get('name'),
                from_email: formData.get('email'),
                message: formData.get('message'),
                name: formData.get('name'),
                email: formData.get('email'),
                user_name: formData.get('name'),
                user_email: formData.get('email'),
                user_message: formData.get('message')
            };
            
            console.log('üìù –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Å –¥–∞–Ω–Ω—ã–º–∏:', templateParams);
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–¢ –ñ–ï –ø—Ä—è–º–æ–π API –≤—ã–∑–æ–≤, —á—Ç–æ –∏ –≤ —É—Å–ø–µ—à–Ω–æ–º —Ç–µ—Å—Ç–µ
            const response = await fetch('https://api.emailjs.com/api/v1.0/email/send', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    service_id: emailjsConfig.serviceId,
                    template_id: emailjsConfig.templateId,
                    user_id: emailjsConfig.publicKey,
                    template_params: templateParams
                })
            });
            
            console.log('üì° –û—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã:', response.status, response.statusText);
            
            if (response.ok) {
                const responseText = await response.text();
                console.log('‚úÖ –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ:', responseText);
                showNotification('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', 'success');
                form.reset();
            } else {
                const errorText = await response.text();
                console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', errorText);
                throw new Error(`–û—à–∏–±–∫–∞ ${response.status}: ${errorText}`);
            }
            
        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', error);
            
            // Fallback: –æ—Ç–∫—Ä—ã–≤–∞–µ–º Telegram
            const formData = new FormData(form);
            const telegramMessage = encodeURIComponent(
                `–°–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞:\n\n` +
                `–ò–º—è: ${formData.get('name')}\n` +
                `Email: ${formData.get('email')}\n\n` +
                `${formData.get('message')}`
            );
            const telegramLink = `https://t.me/My_Workstation?text=${telegramMessage}`;
            
            window.open(telegramLink, '_blank');
            showNotification('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è Telegram', 'error');
            form.reset();
            
        } finally {
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        }
    });
}

// === –ê–ù–ò–ú–ê–¶–ò–ò ===
function initializeAnimations() {
    // Intersection Observer –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate-fade-in');
            }
        });
    }, observerOptions);
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —Å–µ–∫—Ü–∏—è–º–∏
    document.querySelectorAll('section').forEach(section => {
        observer.observe(section);
    });
}

// === –°–¢–ò–õ–ò (–¥–æ–±–∞–≤–ª—è–µ–º –≤ head) ===
const additionalStyles = `
<style>
.category-badge {
    @apply px-3 py-1 text-xs font-semibold rounded-full;
}

.category-security {
    @apply bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200;
}

.category-devops {
    @apply bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200;
}

.category-ml {
    @apply bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200;
}

.category-humanities {
    @apply bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200;
}

.animate-fade-in {
    animation: fadeIn 0.6s ease-out forwards;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.skill-item {
    @apply p-2 hover:bg-gray-50 dark:hover:bg-dark-bg rounded-lg transition-colors cursor-pointer;
}

.skill-item:hover {
    transform: translateY(-2px);
}
</style>
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head
document.head.insertAdjacentHTML('beforeend', additionalStyles);

// –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
function initializeLanguageSystem() {
    console.log('üåç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ i18n –¥–æ—Å—Ç—É–ø–Ω–∞
    if (typeof window.i18n === 'undefined') {
        console.error('‚ùå –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ translations.js');
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π —è–∑—ã–∫–∞ –≤ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const langButtons = document.querySelectorAll('.lang-btn[data-lang]');
    langButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const lang = this.getAttribute('data-lang');
            console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–∞: ${lang}`);
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —è–∑—ã–∫
            window.i18n.setLanguage(lang);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            updateLanguageButtons();
        });
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π —è–∑—ã–∫–∞
    const mobileLangButtons = document.querySelectorAll('.mobile-lang-btn[data-lang]');
    mobileLangButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const lang = this.getAttribute('data-lang');
            console.log(`üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–∞: ${lang}`);
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —è–∑—ã–∫
            window.i18n.setLanguage(lang);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            updateLanguageButtons();
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
            const mobileMenu = document.getElementById('mobile-menu');
            if (mobileMenu) {
                mobileMenu.classList.add('hidden');
            }
        });
    });
    
    // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    updateLanguageButtons();
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    setTimeout(() => {
        window.i18n.translatePage();
        updateLanguageButtons();
        console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    }, 100);
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
}

function updateLanguageButtons() {
    const currentLang = window.i18n.getCurrentLanguage();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Å–∫—Ç–æ–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    const langButtons = document.querySelectorAll('.lang-btn[data-lang]');
    langButtons.forEach(button => {
        const lang = button.getAttribute('data-lang');
        if (lang === currentLang) {
            button.classList.add('active');
            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
            button.style.backgroundColor = 'rgb(59, 130, 246)';
            button.style.color = 'white';
        } else {
            button.classList.remove('active');
            // –£–±–∏—Ä–∞–µ–º —Å—Ç–∏–ª–∏
            button.style.backgroundColor = '';
            button.style.color = '';
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    const mobileLangButtons = document.querySelectorAll('.mobile-lang-btn[data-lang]');
    mobileLangButtons.forEach(button => {
        const lang = button.getAttribute('data-lang');
        if (lang === currentLang) {
            button.classList.add('active');
            button.style.backgroundColor = 'rgb(59, 130, 246)';
            button.style.color = 'white';
            button.style.borderColor = 'rgb(59, 130, 246)';
        } else {
            button.classList.remove('active');
            button.style.backgroundColor = '';
            button.style.color = '';
            button.style.borderColor = '';
        }
    });
}

console.log('üéâ main.js –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω!');
console.log('üîç testEmailJS –¥–æ—Å—Ç—É–ø–Ω–∞?', typeof window.testEmailJS); 